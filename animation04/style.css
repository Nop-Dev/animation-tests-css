* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
      background-color: mediumpurple;
  }
  
  .square {
      width: 4rem;
      height: 4rem;
      background-color: white;
      opacity: .6;
  }
  
  /* Usamos "animation-name" pra ouxa o nome da Keyframe criada. Usamos vírgulas em cada elemento de configuração da animação. se tiver colocado dois names, como no meu caso, qualquer configuração posso colocar uma vírgula entre os elementos. O primeiro elemento vai ser para o primeiro name, o segundo elemento após a vírgula vai ser para o segundo name, e assim por diante. */
  .square {
    animation-name: move, pulse;
    animation-duration: 1s, 200ms;

    /* Usamos "animation-fill-mode" com "forwards" para determinar se o objeto vai continuar na posição que o keyframe deixou no final da animação, ou se ele vai voltar pro padão*/
    animation-fill-mode: forwards;

    /* Usamos "animation-direction" para definir de qual lado e para qual lado a animação vai fluir */
    /* animation-direction: reverse; */

    /* Em vez de usar 50% também podemos usar as propriedades: */
    animation-direction: alternate;

    /* E ao usar a propriedade abaixo, mostro quantas vezes eu quero que a animação se repita (quantas vezes eu quero que a animação se repita em números).
    
    Posso usar a forma abaixo para essa repetição ser infinita*/
    animation-iteration-count: infinite;


  /* Usamos a propriedade abaixo para setar um atraso para a animação começar: */
  animation-delay: 2s;

  /* Usar "animation-timing-function" com as propriedades "linear", "ease", "ease-in", "ease-out", "cubic-bezier" e algumas outras muda o comportamento da animação, ou seja, a forma como ela se movimenta*/

  /* Dá tambem pra usar a propriedade abaixo pra fazer ele concluir a animação em passos: (curti isso, vou deixar)*/
  animation-timing-function: steps(20);

  /* Shorthand: essa linha abaixo resumiria todo o código... */
  animation: move 1s forwards alternate infinite, blink 200ms infinite;
  }

  .square:hover {
    /* Podemos usar a propriedade abaixo para selecionar o que a animação deve fazer quando passar o mouse em cima */

    animation-play-state: paused;
  }
  
  /* Toda animação tem um ponto de partida, e um ponto de término, um 0% e um 100%, um "From" e um "To" */

  /* Usamos keyframes para criar animações */
  @keyframes move {  

    /* Ao setar "50%" a animação vai concluir o que eu configurar, e então voltar as suas propriedades iniciais, de 0%:

    50% {
      transform: translateX(calc(100vw - 100%));
    } */

    100% {
      transform: translateX(calc(100vw - 100%));
    }
  }

  /* Criando nova animação que faz o quadrado ficar piscando */
  @keyframes pulse {
    /* A definição de 0% e 100% anula o que eu escrevi na linha 15 desse código, onde eu setei uma opacidade de valor diferente. A que eu escrevi nesse keyframe é mais importante...  */
    0%, 100% {
      opacity: .2;
    }
    50% {
      opacity: 1;
    }
  }